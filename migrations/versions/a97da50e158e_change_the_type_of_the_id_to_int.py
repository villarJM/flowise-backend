"""
change the type of the id to int

Revision ID: a97da50e158e
Revises: 143ddbd00580
Create Date: 2025-08-18 16:12:56.857807

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a97da50e158e'
down_revision = '143ddbd00580'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Primero, eliminar todas las claves for치neas que referencian users.id
    op.execute('ALTER TABLE daily_reports DROP CONSTRAINT IF EXISTS daily_reports_user_id_fkey')
    op.execute('ALTER TABLE time_entries DROP CONSTRAINT IF EXISTS time_entries_user_id_fkey')
    op.execute('ALTER TABLE weekly_reports DROP CONSTRAINT IF EXISTS weekly_reports_user_id_fkey')
    op.execute('ALTER TABLE project_comments DROP CONSTRAINT IF EXISTS project_comments_user_id_fkey')
    op.execute('ALTER TABLE user_projects DROP CONSTRAINT IF EXISTS user_projects_user_id_fkey')
    op.execute('ALTER TABLE work_schedules DROP CONSTRAINT IF EXISTS work_schedules_user_id_fkey')
    op.execute('ALTER TABLE auth_providers DROP CONSTRAINT IF EXISTS auth_providers_user_id_fkey')
    
    # Cambiar el tipo de users.id de VARCHAR a Integer
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE INTEGER USING id::integer')
    
    # Cambiar el tipo de todas las columnas user_id de VARCHAR a Integer
    op.execute('ALTER TABLE daily_reports ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE time_entries ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE weekly_reports ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE project_comments ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE user_projects ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE work_schedules ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE auth_providers ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    
    # Asegurar que la columna users.id tenga autoincrement
    op.execute('CREATE SEQUENCE IF NOT EXISTS users_id_seq')
    op.execute('ALTER TABLE users ALTER COLUMN id SET DEFAULT nextval(\'users_id_seq\')')
    op.execute('ALTER SEQUENCE users_id_seq OWNED BY users.id')
    
    # Recrear las claves for치neas
    op.execute('ALTER TABLE daily_reports ADD CONSTRAINT daily_reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE time_entries ADD CONSTRAINT time_entries_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE weekly_reports ADD CONSTRAINT weekly_reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE project_comments ADD CONSTRAINT project_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE user_projects ADD CONSTRAINT user_projects_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE work_schedules ADD CONSTRAINT work_schedules_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE auth_providers ADD CONSTRAINT auth_providers_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Eliminar todas las claves for치neas
    op.execute('ALTER TABLE daily_reports DROP CONSTRAINT IF EXISTS daily_reports_user_id_fkey')
    op.execute('ALTER TABLE time_entries DROP CONSTRAINT IF EXISTS time_entries_user_id_fkey')
    op.execute('ALTER TABLE weekly_reports DROP CONSTRAINT IF EXISTS weekly_reports_user_id_fkey')
    op.execute('ALTER TABLE project_comments DROP CONSTRAINT IF EXISTS project_comments_user_id_fkey')
    op.execute('ALTER TABLE user_projects DROP CONSTRAINT IF EXISTS user_projects_user_id_fkey')
    op.execute('ALTER TABLE work_schedules DROP CONSTRAINT IF EXISTS work_schedules_user_id_fkey')
    op.execute('ALTER TABLE auth_providers DROP CONSTRAINT IF EXISTS auth_providers_user_id_fkey')
    
    # Revertir el tipo de users.id de Integer a VARCHAR
    op.execute('ALTER TABLE users ALTER COLUMN id DROP DEFAULT')
    op.execute('DROP SEQUENCE IF EXISTS users_id_seq')
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE VARCHAR USING id::text')
    
    # Revertir el tipo de todas las columnas user_id de Integer a VARCHAR
    op.execute('ALTER TABLE daily_reports ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE time_entries ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE weekly_reports ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE project_comments ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE user_projects ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE work_schedules ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    op.execute('ALTER TABLE auth_providers ALTER COLUMN user_id TYPE VARCHAR USING user_id::text')
    
    # Recrear las claves for치neas con tipos VARCHAR
    op.execute('ALTER TABLE daily_reports ADD CONSTRAINT daily_reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE time_entries ADD CONSTRAINT time_entries_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE weekly_reports ADD CONSTRAINT weekly_reports_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE project_comments ADD CONSTRAINT project_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE user_projects ADD CONSTRAINT user_projects_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE work_schedules ADD CONSTRAINT work_schedules_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    op.execute('ALTER TABLE auth_providers ADD CONSTRAINT auth_providers_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(id)')
    
    # ### end Alembic commands ###
